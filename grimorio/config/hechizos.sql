SET NAMES utf8;
SET FOREIGN_KEY_CHECKS = 0;

DROP TABLE IF EXISTS `hechizos`;

CREATE TABLE `hechizos` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `grimorio` varchar(111) DEFAULT NULL,
  `capitulo` varchar(111) DEFAULT NULL,
  `nombre` varchar(111) DEFAULT NULL,
  `autor` varchar(111) DEFAULT NULL,
  `descripcion` text,
  `codigo` text,
  `estado` varchar(111) DEFAULT '[PENDIENTE]',
  `ip` varchar(111) DEFAULT '',
  `creado_at` datetime DEFAULT NULL,
  `modificado_in` datetime DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=40 DEFAULT CHARSET=utf8;

insert into `hechizos` values('12','controllers','','public function formulario','demonio','Si haces como yo últimamente, que cargo con ajax todos los formularios en ventanas modales; Si tu a acción formulario de tu controlador empieza así, quizá no necesites usar un captcha anti-spam. ','    public function formulario($id=0)\r\n    {\r\n		if ( ! Input::isAjax() ) exit;','[PUBLICADO]','88.7.241.119',null,'2017-02-13 09:00:44'),
 ('13','libs','','_.php','demonio','Esta es mi navaja suiza para mis app y para hacer debug; coge y quita los métodos que quieras. Yo el que más uso es el método \"d\" que finaliza la ejecución imprimiendo las variables en pantalla.','<?php\r\n/**\r\n * NAVAJA SUIZA\r\n */\r\nclass _\r\n{\r\n	# IMPRIME EN PANTALLA VARIABLES\r\n    static function r($x=\'\')\r\n    {\r\n        if ( is_bool($x) )\r\n        {\r\n            if ($x === TRUE) $x = \'TRUE\';\r\n            else if ($x === FALSE) $x = \'FALSE\';\r\n        }\r\n        #$x = str_replace(\'<\', \'<\', $x);\r\n        return \'<pre class=\"col s12\">\' . print_r($x, 1) . \'</pre>\';\r\n    }\r\n    static function e($x=\'\') { echo self::r($x); }\r\n    static function d($x=\'\')\r\n    {\r\n        echo round( (microtime(1) - $_SERVER[\'REQUEST_TIME_FLOAT\'])*1000, 4) . \' ms<hr>\';\r\n        echo ($x) ? \'<h3>RESULT</h3>\' . self::r($x) : \'<h3>EMPTY</h3>\';\r\n        die;\r\n    }\r\n\r\n    # REDONDEA UN NUMERO CON DOS DECIMALES\r\n    static function n($n, $d=2)\r\n    {\r\n        $n = round($n, $d);\r\n        return number_format($n, $d, \'.\', \'\');\r\n    }\r\n\r\n	# CONVIERTE UN TITULO EN UN PARAMETRO\r\n    static public function slug($s)\r\n    {\r\n        $s = preg_replace(\'/[^a-z0-9_]/i\', \'-\', $s);\r\n		$s = mb_strtolower($s);\r\n		return $s;\r\n	}\r\n\r\n    # PARA CORTAR CADENAS\r\n	public function cut($from, $s, $to)\r\n	{\r\n		if ($from) $a = explode($from, $s);\r\n		else $a[1] = $s;\r\n        if ( empty($a[1]) ) self::d([$from, $s, $to]);\r\n		$b = explode($to, $a[1]);\r\n		return $b[0];\r\n	}\r\n\r\n    # OBTIENE DE UNA CADENA DE TEXTO EL TIPO DE SALTO DE LINEA\r\n    static public function eol($s, $test=0)\r\n	{\r\n		if ($test)\r\n		{\r\n			if ( strstr($s, \"\\r\\n\") ) die( \'eol windows!\' );\r\n			else if ( strstr($s, \"\\n\") ) die( \'eol linux!\' );\r\n			else if ( strstr($s, \"\\r\") ) die( \'eol mac!\' );\r\n			else die ( \'no eol in file!\' );\r\n		}\r\n\r\n		if ( strstr($s, \"\\r\\n\") ) return \"\\r\\n\";\r\n		else if ( strstr($s, \"\\n\") ) return \"\\n\";\r\n		else if ( strstr($s, \"\\r\") ) return \"\\r\";\r\n	}\r\n\r\n    # DESCARGA EL BUFER PARA IMPRIMIR VARIBLES EN EJECUCION\r\n	static public function flush($s=\'\')\r\n	{\r\n        if (ob_get_level() == 0) ob_start();\r\n        if ($s) self::e($s);\r\n        ob_flush();\r\n        flush();\r\n        ob_end_flush();\r\n	}\r\n\r\n    # INCLUYE VISTAS\r\n	static public function inc($view, $vars=null)\r\n	{\r\n        if ( file_exists(APP_PATH . \"views/$view.phtml\") )\r\n        {\r\n            ob_start();\r\n            if ($vars) extract($vars, EXTR_OVERWRITE);\r\n            include APP_PATH . \"views/$view.phtml\";\r\n            return ob_get_clean();\r\n        }\r\n	}\r\n}\r\n','[PUBLICADO]','88.7.241.119',null,null),
 ('14','libs','','act_record.php','demonio','Este es mi pseudo Active Record y aunque aun no hace todo lo que debería hacer como lo hace un completo AR, me apaña por el momento y me da mas control de lo que quiero hacer.','<?php\r\n/**\r\n */\r\nclass ActRecord\r\n{\r\n    public $pdo;\r\n    public $columns = \'*\';\r\n    public $table;\r\n    public $where;\r\n    public $values;\r\n    public $group;\r\n    public $order;\r\n    public $limit;\r\n    public $sql;\r\n    public $query;\r\n    public $debug;\r\n    public $error;\r\n    public $ready = 1;\r\n\r\n    # DEPENDENCIAS: CONNECT, TABLE, COLS\r\n	public function __construct()\r\n    {\r\n		$this->connect();\r\n		$this->table();\r\n    }\r\n\r\n	public function connect()\r\n    {\r\n		$config = require(APP_PATH.\'config/databases.php\');\r\n		$config = $config[\'default\'];\r\n		$this->pdo = new PDO($config[\'dsn\'], $config[\'username\'], $config[\'password\']);\r\n    }\r\n\r\n	public function table()\r\n	{\r\n        $this->table = mb_strtolower( preg_replace( \'/([A-Z])/\', \"_\\\\1\", lcfirst( get_called_class() ) ) );\r\n        #if ($this->debug) _::d($this->table);\r\n    }\r\n\r\n    public function values($x)\r\n    {\r\n        if ($x) $this->values = (array)$x;\r\n        return $this;\r\n    }\r\n\r\n    public function columns($x)\r\n    {\r\n        $this->columns = $x;\r\n        return $this;\r\n    }\r\n\r\n    # DEPENDENCIAS: VALUES\r\n    public function where($x, $values=[])\r\n    {\r\n        $this->where = \" WHERE $x\";\r\n        $this->values($values);\r\n        return $this;\r\n    }\r\n\r\n    public function group($x)\r\n    {\r\n        $this->group = \" GROUP BY $x\";\r\n        return $this;\r\n    }\r\n\r\n    public function order($x)\r\n    {\r\n        $this->order = \" ORDER BY $x\";\r\n        return $this;\r\n    }\r\n\r\n    public function limit($x)\r\n    {\r\n        $this->limit = \" LIMIT $x\";\r\n        return $this;\r\n    }\r\n\r\n    public function debug($x)\r\n    {\r\n        $this->debug = 1;\r\n        return $this;\r\n    }\r\n\r\n	public function error()\r\n	{\r\n        $this->error = $this->query->errorInfo();\r\n        mail(\'cylon@mtgsearch.it\', \'ERROR: ACT_RECORD\', _::r($this), \'FROM: cylon@mtgsearch.it\');\r\n    }\r\n\r\n	public function lastInsertId()\r\n	{\r\n        return $this->pdo->lastInsertId();\r\n    }\r\n\r\n    # DEPENDENCIAS: WHERE\r\n    public function normalize($x, $values=[])\r\n    {\r\n        #if ($_SESSION[\'logged\']) _::e([$x, $values]);\r\n        if ($values) $this->values($values);\r\n\r\n        # ID COMO PARAMETRO\r\n        if ( is_numeric($x) )\r\n            $this->where(\'id=?\', $x);\r\n\r\n        # MATRIZ DE PARAMETROS\r\n        else if ( is_array($x) )\r\n            foreach ($x as $k=>$v) $this->$k($v);\r\n\r\n        # SQL COMO PARAMETRO\r\n        else if ( preg_match(\'/DESCRIBE|DELETE|INSERT|SELECT|UPDATE/i\', $x) )\r\n            $this->sql = $x;\r\n\r\n        # SIN VALORES NO HAY PARAMETROS\r\n        else if ( strstr($x, \'=?\') and ! $values )\r\n            $this->ready = 0;\r\n\r\n        # PARAMETROS CON VALORES POR DEFECTO\r\n        else if ( ! $this->where )\r\n            $this->where($x, $values);\r\n\r\n        #if ($_SESSION[\'logged\']) _::d($this);\r\n    }\r\n\r\n    # DEPENDENCIAS: NORMALIZE\r\n    public function query($x=null, $values=[])\r\n    {\r\n        if ($x) $this->normalize($x, $values);\r\n        if ($this->debug) _::d($this);\r\n        if ( ! $this->ready ) return;\r\n        $this->query = $this->pdo->prepare($this->sql);\r\n        if ($this->values) $this->query->execute($this->values) or $this->error();\r\n        else if ($this->sql) $this->query->execute() or $this->error();\r\n        return $this;\r\n    }\r\n\r\n    # DEPENDENCIAS: QUERY\r\n    public function sql($x=null, $values=[])\r\n    {\r\n        return $this->query($x, $values);\r\n    }\r\n\r\n    # DEPENDENCIAS: QUERY, LASTINSERTID, FIRST\r\n    public function create($a)\r\n    {\r\n        # NORMALIZA UNA MATRIZ\r\n		foreach ($a as $k=>$v)\r\n        {\r\n            if ($k == \'id\') continue;\r\n            $fields[] = $k;\r\n            $params[] = \'?\';\r\n            $this->values[] = ( strstr($k, \'_at\') ) ? date(\'Y:m:d H:i:s\') : $v;\r\n        }\r\n        $fields = implode(\',\', $fields);\r\n        $params = implode(\',\', $params);\r\n\r\n        # A CREAR\r\n        $this->sql = \"INSERT INTO $this->table ($fields) VALUES ($params)\";\r\n        $this->query();\r\n        $id = $this->lastInsertId();\r\n        return (new $this->table)->first($id);\r\n    }\r\n\r\n    # DEPENDENCIAS: NORMALIZE, QUERY\r\n    public function read($x, $values=[])\r\n    {\r\n        #if ($_SESSION[\'logged\']) _::e($this);\r\n        if ($x) $this->normalize($x, $values);\r\n        if ( ! $this->ready ) return;\r\n        if ( ! $this->sql ) $this->sql = \"SELECT $this->columns FROM $this->table$this->where$this->group$this->order$this->limit\";\r\n        #if ($_SESSION[\'logged\']) _::d($this);\r\n        $this->query();\r\n        $result = ($this->limit == \' LIMIT 1\')\r\n            ? $this->query->fetch(PDO::FETCH_OBJ)\r\n            : $this->query->fetchAll(PDO::FETCH_OBJ);\r\n        return $result;\r\n    }\r\n\r\n     # DEPENDENCIAS: NORMALIZE, QUERY, FIRST\r\n    public function update($x, $values=[])\r\n    {\r\n        if ( is_array($x) )\r\n        {\r\n            # NORMALIZAR\r\n            foreach ($x as $k=>$v)\r\n            {\r\n                if ($k == \'id\') continue;\r\n                $fields[] = \"$k=?\";\r\n                $this->values[] = ( strstr($k, \'_in\') ) ? date(\'Y:m:d H:i:s\') : $v;\r\n            }\r\n            $fields = implode(\',\', $fields);\r\n            $this->values[] = $id = $x[\'id\'];\r\n            $this->sql = \"UPDATE $this->table SET $fields WHERE id=?\";\r\n        }\r\n        else\r\n        {\r\n            $this->normalize($x, $values);\r\n        }\r\n        $this->query();\r\n        return empty($id) ? false : (new $this->table)->first($id);\r\n    }\r\n\r\n    # DEPENDENCIAS: QUERY\r\n    public function delete($id)\r\n    {\r\n        $this->sql = \"DELETE FROM $this->table WHERE id=?\";\r\n        $this->values = [$id];\r\n        $this->query();\r\n        return $this->cols();\r\n    }\r\n\r\n    # DEPENDENCIAS: READ\r\n    public function all($x=null, $values=[])\r\n    {\r\n        return $this->read($x, $values);\r\n    }\r\n\r\n    # DEPENDENCIAS: ALL\r\n    public function find($x=null, $values=[])\r\n    {\r\n        return $this->all($x, $values);\r\n    }\r\n\r\n    # DEPENDENCIAS: ALL\r\n    public function find_all_by_sql($x=null, $values=[])\r\n    {\r\n        return $this->all($x, $values);\r\n    }\r\n\r\n    # DEPENDENCIAS: READ\r\n    public function first($x=null, $values=[])\r\n    {\r\n        $this->limit(1);\r\n        return $this->read($x, $values);\r\n    }\r\n\r\n    # DEPENDENCIAS: FIRST\r\n    public function find_first($x=null, $values=[])\r\n    {\r\n        return $this->first($x, $values);\r\n    }\r\n\r\n    # DEPENDENCIAS: FIRST\r\n    public function find_by_sql($x=null, $values=[])\r\n    {\r\n        return $this->first($x, $values);\r\n    }\r\n\r\n    # DEPENDENCIAS: WHERE, FIRST\r\n    public function firstBy($col, $val)\r\n    {\r\n        $this->where($col, $val);\r\n        $row = $this->first();\r\n        #_::d($this);\r\n        return $row;\r\n    }\r\n\r\n    # DEPENDENCIAS: FIRSTBY\r\n	public function __call($method, $args=[])\r\n    {\r\n        if (substr($method, 0, 8) == \'find_by_\')\r\n		{\r\n            $field = substr($method, 8);\r\n\r\n            if ( isset($args[0]) )\r\n                $arg = array(\"$field=?\", $args[0]);\r\n\r\n            return call_user_func_array(array($this, \'firstBy\'), $arg);\r\n        }\r\n	}\r\n\r\n    # DEPENDENCIAS: ALL\r\n    public function metadata()\r\n    {\r\n		return $this->all(\"DESCRIBE $this->table\");\r\n    }\r\n\r\n    # DEPENDENCIAS: METADATA\r\n    public function cols()\r\n    {\r\n        $rows = (new $this->table)->metadata();\r\n        foreach ($rows as $row) $a[$row->Field] = \'\';\r\n        return (object)$a;\r\n    }\r\n\r\n    # DEPENDENCIAS: FIRST, COLS\r\n    public function rowOrCols($x=null, $values=[])\r\n    {\r\n        return $row = ($x) ? $this->first($x, $values) : (new $this->table)->cols();\r\n    }\r\n\r\n    function __destruct()\r\n    {\r\n    }\r\n\r\n	public function __sleep()\r\n	{\r\n		return array();\r\n	}\r\n}\r\n','[PUBLICADO]','88.7.241.119',null,null),
 ('15','libs','','app_controller.php','demonio','Normalmente siempre que usas AJAX quieres evitar lanzar un template.\r\nDe esta forma, tal efecto estará disponible para toda tu APP.','    final protected function initialize()\r\n    {\r\n        if ( Input::isAjax() ) View::template(\'\');\r\n    }','[PUBLICADO]','88.7.241.119',null,null),
 ('16','partials','materialize','footer.phtml','demonio','Este es el footer uso aquí con clases materializeCSS.\r\nTambién requiere algunas clases propias definidas en style.css y el método \"n\" de mi navaja suiza para redondear los números.','\r\n<a class=\"btn-floating btn-large load-modal blue darken-1 button\" href=\"/index/formulario\">\r\n    <i class=\"material-icons\">add</i>\r\n</a>\r\n\r\n<footer class=\"col s12 red lighten-1 valign-wrapper\">\r\n    <small class=\"center-container\">\r\n        <?=$_SERVER[\'REMOTE_ADDR\']?> —\r\n        <?=_::n(microtime(1)-$_SERVER[\'REQUEST_TIME_FLOAT\'], 3 ) . \' s\'?> —\r\n        <?=_::n(memory_get_usage()/1048576, 2) . \' MB\'?>\r\n    </small>\r\n</footer>\r\n','[PUBLICADO]','88.7.241.119',null,null),
 ('17','partials','materialize','form.phtml','demonio','Con este partial se generan los elementos de un formulario por el tipo de campo definidos en la tabla de la base de datos.\r\nSolo requiere pasarle el metadata.','<?php\r\nextract( View::getVar() );\r\n\r\nforeach ($metadata as $o)\r\n{\r\n    $col = $o->Field;\r\n    if ( ! empty($skip) and in_array($col, $skip) ) continue;\r\n    $col_type = $o->Type;\r\n    $color_text = ($o->Key) ? \'red-text\' : \'black-text\';\r\n\r\n    if ( strstr($col_type, \'tinyint(\') )\r\n    {\r\n        ?>\r\n        <div class=\"col s12 m6 l3 switch\">\r\n            <label for=\"<?=$col?>\">\r\n                <span class=\"<?=$color_text?>\"><?=ucfirst(empty($labels)?$col:$labels[$col])?></span><br>\r\n                Off\r\n                <input<?php if ( ! empty($item) and $item->$col) echo \' checked\'; ?> type=\"checkbox\" id=\"<?=$col?>\" name=\"<?=$col?>\" value=\"1\">\r\n                <span class=\"black lever\"></span>\r\n                On\r\n            </label>\r\n        </div>\r\n        <?php\r\n    }\r\n    else if ( strstr($col, \'tags\') )\r\n    {\r\n        ?>\r\n        <div class=\"col s12\">\r\n            <label class=\"<?=$color_text?>\"><?=ucfirst(empty($labels)?$col:$labels[$col])?></label>\r\n            <input type=\"text\" name=\"tags\" value=\"<?=empty($item)?\'\':$item->$col?>\">\r\n        </div>\r\n        <?php\r\n    }\r\n    else if ( strstr($col_type, \'text\') )\r\n    {\r\n        ?>\r\n        <div class=\"col s12\">\r\n            <label class=\"<?=$color_text?>\"><?=ucfirst(empty($labels)?$col:$labels[$col])?></label>\r\n            <textarea class=\"flow-text kuwy materialize-textarea\" name=\"<?=$col?>\"><?=empty($item)?\'\':$item->$col?></textarea>\r\n        </div>\r\n        <?php\r\n    }\r\n    else if ( strstr($col_type, \'date\') )\r\n    {\r\n        ?>\r\n        <div class=\"col s12 m6 l3\">\r\n            <label class=\"<?=$color_text?>\" for=\"<?=$col?>\"><?=ucfirst(empty($labels)?$col:$labels[$col])?></label>\r\n            <input type=\"text\" class=\"datepicker\" id=\"<?=$col?>\" name=\"<?=$col?>\" value=\"<?=empty($item)?\'\':$item->$col?>\">\r\n        </div>\r\n        <?php\r\n    }\r\n    else\r\n    {\r\n        ?>\r\n        <div class=\"col s12 m6 l3\">\r\n            <label class=\"<?=$color_text?>\" for=\"<?=$col?>\"><?=ucfirst(empty($labels)?$col:$labels[$col])?></label>\r\n            <input type=\"text\" id=\"<?=$col?>\" name=\"<?=$col?>\" value=\"<?=empty($item)?\'\':$item->$col?>\">\r\n        </div>\r\n        <?php\r\n    }\r\n}\r\n','[PUBLICADO]','88.7.241.119',null,null),
 ('18','templates','','default.phtml','demonio','Un template de partida.','<!DOCTYPE html>\r\n<html>\r\n    <head>\r\n        <link href=\"/css/prism.css\" rel=\"stylesheet\" />\r\n        <link href=\"/css/material-icons.css\" rel=\"stylesheet\">\r\n        <link href=\"/css/materialize.min.css\" rel=\"stylesheet\">\r\n        <link href=\"/css/hacks.css\" rel=\"stylesheet\">\r\n        <link href=\"/css/helpers.css\" rel=\"stylesheet\">\r\n        <link href=\"/css/style.css\" rel=\"stylesheet\">\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"/>\r\n        <title>\r\n            <?php if ( ! empty($item->id) ) {\r\n                echo \"$item->grimorio :: $item->nombre\";\r\n            } else {\r\n                echo \"Tu grimorio: $controller_name :: $action_name\";\r\n            } ?>\r\n        </title>\r\n    </head>\r\n    <body class=\"row\" id=\"important\">\r\n        <?php View::partial(\'nav\'); ?>\r\n        <?php View::content(); ?>\r\n        <?php View::partial(\'footer\'); ?>\r\n        <div class=\"modal pa15\"></div>\r\n        <script src=\"/js/jquery-3.1.1.min.js\"></script>\r\n        <script src=\"/js/prism.js\"></script>\r\n        <script src=\"/js/materialize.min.js\"></script>\r\n        <script src=\"/js/function.js\"></script>\r\n        <script src=\"/js/script.js\"></script>\r\n    </body>\r\n</html>','[PUBLICADO]','88.7.241.119',null,null),
 ('21','css','materialize','material-icons.css','demonio','Solo necesitas descargarte la fuente del GIT de google design con nombre \"MaterialIcons-Regular.ttf\" y colocarla en la carpeta fonts de tu raiz y esto tendrás disponible de forma local todos estos iconos:\r\nhttps://material.io/icons/','\r\n@font-face\r\n{\r\n    font-family: \'Material Icons\';\r\n    src: url(/fonts/MaterialIcons-Regular.ttf) format(\'truetype\');\r\n}\r\n\r\n.material-icons\r\n{\r\n    font-family: \'Material Icons\';\r\n    font-size: x-large;\r\n    font-style: normal;\r\n    text-transform: none;\r\n}\r\n','[PUBLICADO]','88.7.241.119',null,null),
 ('22','css','materialize','media.css','demonio','Aquí tenemos 3 helpers útiles para ocultar elementos con media queries. ','\r\n@media (max-width: 600px)\r\n{\r\n    #important .s0 { display:none; }\r\n}\r\n\r\n@media (min-width: 601px) and (max-width: 992px)\r\n{\r\n	#important .m0 { display:none; }\r\n}\r\n\r\n@media (min-width: 993px)\r\n{\r\n	#important .l0 { display:none; }\r\n}\r\n','[PUBLICADO]','88.7.241.119',null,null),
 ('23','js','materialize','function.js','demonio','Por si no lo sabes, cuando usas AJAX necesitas volver a activar todas las partes de tu web que funcionan con materialize.','function materialize()\r\n{\r\n    /* DESPEGABLES */\r\n    $(\'select\').material_select();\r\n\r\n    /* POPUP */\r\n    //if ( $(\'.modal\').hasClass(\'autoopen\') ) $(\'.modal\').openModal();\r\n    $(\'.modal\').modal();\r\n\r\n    /* CALENDARIO */\r\n    $(\'.datepicker\').pickadate(\r\n    {\r\n        selectMonths: true,\r\n        labelMonthNext: \'Mes siguiente\',\r\n        labelMonthPrev: \'Mes anterior\',\r\n        labelMonthSelect: \'Seleccione un mes\',\r\n        labelYearSelect: \'Seleccione un año\',\r\n        monthsFull: [ \'Enero\', \'Febrero\', \'Marzo\', \'Abril\', \'Mayo\', \'Junio\', \'Julio\', \'Agosto\', \'Septiembre\', \'Octubre\', \'Noviembre\', \'Diciembre\' ],\r\n        monthsShort: [ \'Ene\', \'Feb\', \'Mar\', \'Abr\', \'May\', \'Jun\', \'Jul\', \'Ago\', \'Sep\', \'Oct\', \'Nov\', \'Dic\' ],\r\n        weekdaysFull: [ \'Domingo\', \'Lunes\', \'Martes\', \'Miercoles\', \'Jueves\', \'Viernes\', \'Sabado\' ],\r\n        weekdaysShort: [ \'Dom\', \'Lun\', \'Mar\', \'Mie\', \'Jue\', \'Vie\', \'Sab\' ],\r\n        weekdaysLetter: [ \'D\', \'L\', \'M\', \'X\', \'J\', \'V\', \'S\' ],\r\n        today: \'Hoy\',\r\n        clear: \'Limpiar\',\r\n        close: \'\',\r\n        format: \'yyyy-mm-dd\',\r\n        firstDay: -50,\r\n        selectYears: 150,\r\n        onSet: function(arg)\r\n        {\r\n            if (\'select\' in arg) this.close();\r\n        }\r\n    });\r\n\r\n    /* PESTANYAS */\r\n    //$(\'ul.tabs\').tabs( \'select_tab\', $(\'#body\').data(\'tab\') );\r\n    $(\'ul.tabs\').tabs();\r\n\r\n    /* BOTON DESPEGABLE DE LA BARRA DE NAVEGACION */\r\n    $(\'.dropdown-button\').dropdown();\r\n\r\n    /* ETIQUETAS */\r\n    $(\'.chips\').material_chip();\r\n\r\n    /* AUTO AJUSTAR CAMPOS DE AREA DE TEXTO */\r\n    $(\'.materialize-textarea\').trigger(\'autoresize\');\r\n\r\n    /* INFO EMERGENTE EN BOTONES */\r\n    $(\'.tooltipped\').tooltip( {delay:50} );\r\n\r\n    /* VENTANA EMERGENTE */\r\n    $(\'.modal\').modal();\r\n}\r\n','[PUBLICADO]','88.7.241.119',null,null),
 ('24','js','','script.js','demonio','No hace falta que lo copies tal cual. Añade lo que necesites y así tu aplicación será más rápida.\r\nEl código esta comentado por bloques autosuficientes.','\r\n$(document).ajaxStart(function()\r\n{\r\n});\r\n$(document).ajaxComplete(function()\r\n{\r\n    materialize();\r\n});\r\n\r\n$(window).resize(function()\r\n{\r\n});\r\n\r\n$(function()\r\n{\r\n    /* MATERIALIZECSS */\r\n    materialize();\r\n\r\n    /* AJAX EN FORMULARIOS */\r\n    $(\'body\').on(\'click\', \'form[data-ajax] button\', function(e)\r\n    {\r\n        e.preventDefault();\r\n        var form = $(this).parents(\'form\');\r\n        var url = form.attr(\'action\');\r\n        console.log(url);\r\n        $(\'.url a\').attr(\'href\', url).text(url);\r\n        var to = form.attr(\'data-ajax\');\r\n        var btn_name = $(this).attr(\'name\');\r\n        var btn_val = $(this).val();\r\n        var post = btn_name+\'=\'+btn_val+\'&\'+form.serialize();\r\n        $.post(url, post, function(data)\r\n        {\r\n            $(to).html(data);\r\n        });\r\n    });\r\n\r\n    /* AJAX EN ENLACES */\r\n    $(\'body\').on(\'click\', \'a[data-ajax]\', function(e)\r\n    {\r\n        e.preventDefault();\r\n		var url = $(this).attr(\'href\');\r\n        console.log(url);\r\n        $(\'.url a\').attr(\'href\', url).text(url);\r\n		var to = $(this).attr(\'data-ajax\');\r\n        console.log([to, url]);\r\n		$(to).text(\'Loading...\').load(url, {\'to\':to, \'url\':url});\r\n\r\n        /* GO TO TAB !! */\r\n        var tab = url.split(\'#\')[1];\r\n        if (tab != \'undefined\')\r\n        {\r\n            $(\'ul.tabs\').tabs(\'select_tab\', tab);\r\n        }\r\n    });\r\n\r\n    /* MUESTRA Y OCULTA ALGO */\r\n    $(\'body\').on(\'click\', \'[data-toogle]\', function()\r\n    {\r\n        var to = $(this).data(\'toogle-to\');\r\n        $(to).toggle();\r\n    });\r\n\r\n    /* MUESTRA Y OCULTA EL ASIDE */\r\n    $(\'body\').on(\'click\', \'.toggle-aside\', function(e)\r\n    {\r\n        e.preventDefault();\r\n        var to = \'aside.\'+$(this).data(\'aside\');\r\n\r\n        $(\'aside\').not(to).addClass(\'s0\').css(\'position\', \'relative\');\r\n        $(\'#sidenav-overlay\').hide();\r\n\r\n        if ( $(to).hasClass(\'s0\') )\r\n        {\r\n            $(to).removeClass(\'s0\').css(\'position\', \'absolute\');\r\n            $(\'#sidenav-overlay\').css(\'z-index\', 1010).show();\r\n        }\r\n        else\r\n        {\r\n            $(to).addClass(\'s0\').css(\'position\', \'relative\');\r\n            $(\'#sidenav-overlay\').hide();\r\n        }\r\n    });\r\n    /* OCULTA EL ASIDE PINCHANDO EN EL OVERLAY O EN UN ENLACE DEL ASIDE */\r\n    $(\'body\').on(\'click\', \'#sidenav-overlay, aside a\', function()\r\n    {\r\n        $(\'aside\').addClass(\'s0\').css(\'position\', \'relative\');\r\n        $(\'#sidenav-overlay\').hide();\r\n    });\r\n\r\n    /* CARGA CONTENIDO EN UN MODAL Y LO ABRE */\r\n    $(\'body\').on(\'click\', \'.load-modal\', function(e)\r\n    {\r\n        e.preventDefault();\r\n        var url = $(this).attr(\'href\');\r\n        $(\'.modal\').load(url).modal(\'open\');\r\n    });\r\n});\r\n','[PUBLICADO]','88.7.241.119',null,null),
 ('26','models','','public function edit','demonio','Si lo que quieres es subir archivos desde un formulario a la vez que guardas los datos, tu método debería empezar con estas lineas.\r\nPara hacer las miniaturas usaremos la lib \"_img\".','	public function edit($a, $f=[], $w=\'\', $h=\'\')\r\n	{\r\n        if ( ! empty($f) )\r\n        {\r\n            foreach ($f as $k => $v)\r\n            {   \r\n                $tmp_name = $v[\'tmp_name\'];\r\n                $name = $v[\'name\'];\r\n                move_uploaded_file($tmp_name, \"img/$name\");\r\n                _img::makeThumb(PUB_PATH . \"img/$name\", PUB_PATH . \"img/crop.$name\", $w, $h);\r\n                $a[$k] = \"crop.$name\";\r\n            }\r\n        }','[PUBLICADO]','88.7.241.119',null,null),
 ('27','libs','','_img','demonio','Método makeThumb de la clase \"_img\" para crear miniaturas.','<?php\r\n/**\r\n */\r\nclass _img\r\n{    \r\n    static function makeThumb( $src, $dest, $desired_width, $desired_height=\'\' )\r\n    {\r\n        $extension = explode( \'.\', $src );\r\n        $extension = end( $extension );\r\n        if ( $extension == \'jpg\' ) $extension = \'jpeg\';\r\n        $imagecreate = \"imagecreatefrom$extension\";\r\n        $image = \"image$extension\";\r\n        \r\n        /* read the source image */\r\n        $source_image = $imagecreate( $src );\r\n        $width = imagesx( $source_image );\r\n        $height = imagesy( $source_image );\r\n        \r\n        /* find the \"desired height\" of this thumbnail, relative to the desired width  */\r\n        if ( ! $desired_width ) $desired_width = floor( $width * ( $desired_height / $height ) );\r\n        \r\n        /* find the \"desired height\" of this thumbnail, relative to the desired width  */\r\n        if ( ! $desired_height ) $desired_height = floor( $height * ( $desired_width / $width ) );\r\n        \r\n        /* create a new, \"virtual\" image */\r\n        $virtual_image = imagecreatetruecolor( $desired_width, $desired_height );\r\n        imagesavealpha($virtual_image, true);\r\n        $trans_colour = imagecolorallocatealpha($virtual_image, 0, 0, 0, 127);\r\n        imagefill($virtual_image, 0, 0, $trans_colour);\r\n        \r\n        /* copy source image at a resized size */\r\n        imagecopyresampled( $virtual_image, $source_image, 0, 0, 0, 0, $desired_width, $desired_height, $width, $height );\r\n        #imagecopyresized( $virtual_image, $source_image, 0, 0, 0, 0, $desired_width, $desired_height, $width, $height );\r\n        \r\n        /* create the physical thumbnail image to its destination */\r\n        return $image( $virtual_image, $dest );\r\n    }','[PUBLICADO]','88.7.241.119',null,null),
 ('30','controllers','','protected function before_filter','demonio','Con este método puesto en tu controlador puedes invocar los métodos de tu modelo desde un formulario con botones con name=\"tu_modelo\" y value=\"tu_metodo\".','	protected function before_filter()\r\n	{\r\n        if ( $action = Input::post(\'hechizos\') )\r\n        {\r\n            unset($_POST[\'hechizos\']);\r\n            $this->item = (new Hechizos)->$action($_POST);\r\n        }\r\n    }','[PUBLICADO]','88.7.241.119','2017-02-09 16:12:47',null),
 ('31','js','','filter.js','demonio','Un filtro caliente prácticamente es todo JS, un campo de texto y el trabajo de ocultar y mostrar se hace en cliente a medida que escribes en ese campo de texto.','\r\n$(function()\r\n{\r\n    /* INPUT LIVE FILTER */\r\n    $(\'body\').on(\'keyup\', \'[data-filter]\', function()\r\n    {\r\n        var item = $(this).data(\'filter\');\r\n        var search = $(this).val();\r\n        $(item).hide();\r\n        $(item+\":icontains(\'\"+search+\"\')\").show();\r\n    });\r\n});\r\n\r\n/* INPUT LIVE FILTER ACCENTS */\r\nreplaceAccents = function(q) {\r\n    q = q.replace(/[eéèêëEÉÈÊË]/gi,\'[eéèêëEÉÈÊË]\');\r\n    q = q.replace(/[aàâäAÀÁÂÃÄÅÆ]/gi,\'[aàâäAÀÁÂÃÄÅÆ]\');\r\n    q = q.replace(/[cçC]/gi,\'[cçC]\');\r\n    q = q.replace(/[iïîIÌÍÎÏ]/gi,\'[iïîIÌÍÎÏ]\');\r\n    q = q.replace(/[oôöÒÓÔÕÖ]/gi,\'[oôöÒÓÔÕÖ]\');\r\n    q = q.replace(/[uüûUÜÛÙÚ]/gi,\'[uüûUÜÛÙÚ]\');\r\n    q = q.replace(/[yYÿÝ]/gi,\'[yYÿÝ]\');\r\n    return q;\r\n};\r\n/* INPUT LIVE FILTER IS SENSITIVE CASE */\r\njQuery.expr[\':\'].icontains = function(a, i, m)\r\n{\r\n    var q = jQuery(a).text();\r\n    return replaceAccents(q).toUpperCase().indexOf( replaceAccents(m[3]).toUpperCase() ) >= 0;\r\n};\r\n','[BORRADO]','88.7.241.119',null,null),
 ('34','partials','materialize','toast.phtml','demonio','Toast para tus controladores y modelos.\r\n1) Coloca este partial al final de tu template.\r\n2) Ejemplo de invocación:\r\n$_SESSION[\'toast\'][] = \"No puedes eliminar un hechizo que no es tuyo.\";','<script>\r\n$(function()\r\n{\r\n    <?php if ( ! empty($_SESSION[\'toast\']) ) : ?>\r\n        // Materialize.toast(message, displayLength, className, completeCallback);\r\n        // 4000 is the duration of the toast\r\n        <?php foreach ($_SESSION[\'toast\'] as $toast) : ?>\r\n            Materialize.toast(\'<?=$toast?>\', 4000);\r\n        <?php endforeach;\r\n        unset($_SESSION[\'toast\']);\r\n    endif; ?>\r\n});\r\n</script>\r\n','[PUBLICADO]','88.7.241.119','2017-02-09 22:14:35',null),
 ('35','config','','databases.php','demonio','Archivo que necesitaras incluir para poder usar en nuevo Active Record de KumbiaPHP.','<?php\r\n$databases[\'default\'] =\r\n[\r\n    \'dsn\'      => \'mysql:host=127.0.0.1:3306;dbname=grimorio;charset=utf8\',\r\n    \'username\' => \'root\',\r\n    \'password\' => \'\',\r\n    \'params\'   =>\r\n    [\r\n        //PDO::MYSQL_ATTR_INIT_COMMAND => \'SET NAMES utf8\', //UTF8 en PHP < 5.3.6\r\n        PDO::ATTR_PERSISTENT => true,\r\n        PDO::ATTR_ERRMODE    => PDO::ERRMODE_EXCEPTION,\r\n    ],\r\n];\r\n\r\nreturn $databases; //Siempre al final\r\n','[PUBLICADO]','88.7.241.119','2017-02-09 22:49:50',null),
 ('36','css','materialize','hacks.css','demonio','Cambios habituales en los estilos por defecto del materialize.css','\r\n/* AQUI SOLO LAS CLASES DE MATERIALIZECSS MODIFICADAS */\r\n.fixed-action-btn { left:23px; }\r\n\r\ninput:not([type]), input[type=text], input[type=password], input[type=email], input[type=url], input[type=time], input[type=date], input[type=datetime], input[type=datetime-local], input[type=tel], input[type=number], input[type=search], textarea.materialize-textarea\r\n{\r\n    height:2rem;\r\n    margin-bottom:10px;\r\n}\r\n\r\ninput:not([type]):focus:not([readonly]), input[type=text]:focus:not([readonly]), input[type=password]:focus:not([readonly]), input[type=email]:focus:not([readonly]), input[type=url]:focus:not([readonly]), input[type=time]:focus:not([readonly]), input[type=date]:focus:not([readonly]), input[type=datetime]:focus:not([readonly]), input[type=datetime-local]:focus:not([readonly]), input[type=tel]:focus:not([readonly]), input[type=number]:focus:not([readonly]), input[type=search]:focus:not([readonly]), textarea.materialize-textarea:focus:not([readonly])\r\n{\r\n    border-bottom: 1px solid #ef5350;\r\n    box-shadow: 0 1px 0 0 #ef5350;\r\n}\r\n\r\ntextarea.materialize-textarea { padding:0; }\r\n\r\n.btn,\r\n.btn-floating { box-shadow:none; }\r\n.btn:hover,\r\n.btn-floating:hover\r\n{\r\n    box-shadow:\r\n        0 2px 2px 0 rgba(0,0,0,0.14),\r\n        0 1px 5px 0 rgba(0,0,0,0.12),\r\n        0 3px 1px -2px rgba(0,0,0,0.2);\r\n}\r\n\r\n.btn { padding:0 0.5rem; }\r\n\r\n.row { margin-bottom:0; }\r\n\r\n#sidenav-overlay { display:none; }\r\n','[PUBLICADO]','88.7.241.119','2017-02-09 22:50:42',null),
 ('37','css','materialize','helpers.css','demonio','Helpers para \"vagos\", digo para usar en el html si no quieres ensuciarte mucho las manos creando clases y clases.','\r\n/* MARGENES */\r\n.ml5 { margin-left:5px; }\r\n.ml15 { margin-left:15px; }\r\n.mr50 { margin-right:50px; }\r\n.mt10 { margin-top:10px; }\r\n.mv15 { margin-bottom:15px; margin-top:15px; }\r\n\r\n/* SANGRADO */\r\n.pa15 { padding:15px; }\r\n\r\n/* ENLAZAR BLOQUES */\r\n.box-link { overflow:hidden; position:relative; }\r\n.box-link a { height:100%; left:0; position:absolute; top:0; width:100%; }\r\n\r\n/* CENTAR CONTAINER O CONTENIDO */\r\n.center-container { display:inline-block; margin:0 auto; }\r\n.center-content * { text-align:center; }\r\n\r\n/* TODO EL ANCHO */\r\n.all-width { width:100%; }\r\n\r\n/* ESTILOS DE FUENTE */\r\n.italic { font-style:italic; }\r\n\r\n/* DESACTIVADOS */\r\n.opacity-5 { opacity:0.5; }\r\n\r\n/* TEXTO INCLINADO ESPECIMEN */\r\n.box-specimen { position:relative; }\r\n.specimen-text\r\n{\r\n    display:none;\r\n    font-size: 72px;\r\n    position:absolute; right:50%; z-index:1;\r\n    transform:rotate(-135deg);\r\n    -moz-transform:rotate(-135deg);\r\n    -ms-transform:rotate(-135deg);\r\n    -o-transform:rotate(-135deg);\r\n    -webkit-transform:rotate(-135deg);\r\n    writing-mode:vertical-lr;\r\n}\r\n.box-specimen .specimen-text { display:block; }\r\n','[PUBLICADO]','88.7.241.119','2017-02-09 22:59:37',null),
 ('39','js','','filter.js','demonio','Un filtro caliente prácticamente es todo JS, un campo de texto y el trabajo de ocultar y mostrar se hace en cliente a medida que escribes en ese campo de texto.','$(function()\r\n{\r\n    /* INPUT LIVE FILTER */\r\n    $(\'body\').on(\'keyup\', \'[data-filter]\', function()\r\n    {\r\n        var item = $(this).data(\'filter\');\r\n        var search = $(this).val();\r\n        $(item).hide();\r\n        $(item+\":icontains(\'\"+search+\"\')\").show();\r\n    });\r\n});\r\n\r\n/* INPUT LIVE FILTER ACCENTS */\r\nreplaceAccents = function(q) {\r\n    q = q.replace(/[eéèêëEÉÈÊË]/gi,\'[eéèêëEÉÈÊË]\');\r\n    q = q.replace(/[aàâäAÀÁÂÃÄÅÆ]/gi,\'[aàâäAÀÁÂÃÄÅÆ]\');\r\n    q = q.replace(/[cçC]/gi,\'[cçC]\');\r\n    q = q.replace(/[iïîIÌÍÎÏ]/gi,\'[iïîIÌÍÎÏ]\');\r\n    q = q.replace(/[oôöÒÓÔÕÖ]/gi,\'[oôöÒÓÔÕÖ]\');\r\n    q = q.replace(/[uüûUÜÛÙÚ]/gi,\'[uüûUÜÛÙÚ]\');\r\n    q = q.replace(/[yYÿÝ]/gi,\'[yYÿÝ]\');\r\n    return q;\r\n};\r\n/* INPUT LIVE FILTER IS SENSITIVE CASE */\r\njQuery.expr[\':\'].icontains = function(a, i, m)\r\n{\r\n    var q = jQuery(a).html();\r\n    return replaceAccents(q).toUpperCase().indexOf( replaceAccents(m[3]).toUpperCase() ) >= 0;\r\n};\r\n','[PUBLICADO]','88.7.241.119','2017-02-13 18:10:16',null);

SET FOREIGN_KEY_CHECKS = 1;
